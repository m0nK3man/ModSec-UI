stages:
  - deploy

deploy:
  stage: deploy
  variables:
    GIT_STRATEGY: clone
    NGINX_IPS: "192.168.140.114"
  when: always # Run this stage regardless of previous success/failure
  before_script:
    # Set up SSH access
    - echo "Add SSH Private Key to Agent"
    - apk add --no-cache openssh-client
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
    - chmod 600 ~/.ssh/id_ed25519
    
    # Adding SSH keys for all NGINX IPs to known hosts
    - for IP in $NGINX_IPS; do
        echo "Adding $IP to known_hosts"
        ssh-keyscan -H $IP >> ~/.ssh/known_hosts
      done
  
  script:
    - |
      for IP in $NGINX_IPS; do
          echo "[Info] Copy local-conf to $IP:/tmp/"

          # Create necessary directory on remote server
          ssh root@$IP "mkdir -p /tmp/waf-manager/modsec"

          # Copy the local-conf directory to the remote server
          scp -r local-conf root@$IP:/tmp/waf-manager/

          echo "[Info] Check condition requirements"
          # SSH into each IP and run initial checks and copy configurations
          ssh root@$IP << 'EOF'
            # Check if nginx is installed
            if ! command -v nginx &> /dev/null; then
                  echo "[Error] Nginx is not installed!"
                  exit 1
            fi

            # Check if the /etc/nginx/modsec directory exists
            if [ ! -d "/etc/nginx/modsec" ]; then
                  echo "[Error] Folder /etc/nginx/modsec not exist!"
                  exit 1
            fi

            echo "[Info] Backing up existing modsec configuration"
            # Remove old backup if it exists, then move existing files to backup
            rm -rf /tmp/waf-manager/modsec/*
            mv -f /etc/nginx/modsec/* /tmp/waf-manager/modsec/

            echo "[Info] Copying new config"
            # Remove existing contents in /etc/nginx/modsec before copying new files
            rm -rf /etc/nginx/modsec/*
            cp -rf /tmp/waf-manager/local-conf/* /etc/nginx/modsec/
      EOF

          echo "[Info] Test config and reload"
          # SSH into each IP to test and reload nginx configuration
          ssh root@$IP << 'EOF'
            # Test nginx configuration
            echo "[Info] Testing Nginx Config"
            if nginx -t; then
                  echo "[Info] Reloading Nginx"
                  # If config is valid, reload nginx
                  nginx -s reload
                  echo "[OK] Nginx reloaded successfully on $IP"
                  exit 0
            else
                  # If config is invalid, restore backup
                  rm -rf /etc/nginx/modsec/*
                  cp -rf /tmp/waf-manager/modsec/* /etc/nginx/modsec/
                  echo "[Error] Restored previous modsec configuration due to config test failure"
                  exit 1
            fi
      EOF

      done
